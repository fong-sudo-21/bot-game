import os
import json
import discord
from discord.ext import commands
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# ---------------- GOOGLE SHEET CONFIG ----------------
SHEET_NAME = os.getenv("SHEET_NAME")
GOOGLE_CRED_JSON = os.getenv("GOOGLE_CRED_JSON")

if not SHEET_NAME or not GOOGLE_CRED_JSON:
    raise ValueError("‚ùå Ch∆∞a c·∫•u h√¨nh SHEET_NAME ho·∫∑c GOOGLE_CRED_JSON")

# Parse credentials t·ª´ bi·∫øn m√¥i tr∆∞·ªùng (JSON string ‚Üí dict)
creds_dict = json.loads(GOOGLE_CRED_JSON)
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
client = gspread.authorize(creds)
sheet = client.open(SHEET_NAME).sheet1  # sheet ƒë·∫ßu ti√™n

# ---------------- DISCORD CONFIG ----------------
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")
if not DISCORD_TOKEN:
    raise ValueError("‚ùå Ch∆∞a c·∫•u h√¨nh DISCORD_TOKEN")

intents = discord.Intents.default()
bot = commands.Bot(command_prefix="!", intents=intents)


# ---------------- COMMANDS ----------------
@bot.event
async def on_ready():
    print(f"‚úÖ Bot ƒë√£ online: {bot.user}")


# L·ªánh t√¨m game b·∫±ng embed
@bot.command(name="find")
async def find_game(ctx, *, game_name: str):
    try:
        records = sheet.get_all_records()
        result = [row for row in records if game_name.lower() in row['T√™n Game'].lower()]

        if not result:
            await ctx.send(f"‚ùå Kh√¥ng t√¨m th·∫•y game n√†o t√™n: **{game_name}**")
        else:
            embed = discord.Embed(
                title=f"üîé K·∫øt qu·∫£ t√¨m ki·∫øm cho: {game_name}",
                color=discord.Color.green()
            )
            embed.set_footer(text=f"T√¨m th·∫•y {len(result)} game")

            for row in result:
                game_name = row['T√™n Game']
                game_link = row['Link t·∫£i']
                embed.add_field(
                    name=f"üéÆ {game_name}",
                    value=f"[T·∫£i t·∫°i ƒë√¢y]({game_link})",
                    inline=False
                )

            await ctx.send(embed=embed)
    except Exception as e:
        await ctx.send(f"‚ö†Ô∏è L·ªói: {e}")


# L·ªánh hi·ªÉn th·ªã to√†n b·ªô danh s√°ch game b·∫±ng embed
@bot.command(name="list")
async def list_games(ctx):
    try:
        records = sheet.get_all_records()

        if not records:
            await ctx.send("‚ùå Kh√¥ng c√≥ d·ªØ li·ªáu.")
            return

        embed = discord.Embed(
            title="üìã Danh s√°ch game hi·ªán c√≥",
            description="C√°c game v√† link t·∫£i",
            color=discord.Color.blue()
        )
        embed.set_footer(text=f"T·ªïng s·ªë game: {len(records)}")

        for row in records:
            game_name = row['T√™n Game']
            game_link = row['Link t·∫£i']
            embed.add_field(
                name=f"üéÆ {game_name}",
                value=f"[T·∫£i t·∫°i ƒë√¢y]({game_link})",
                inline=False
            )

        await ctx.send(embed=embed)

    except Exception as e:
        await ctx.send(f"‚ö†Ô∏è L·ªói: {e}")


# L·ªánh ch·ªçn game ng·∫´u nhi√™n
@bot.command(name="random")
async def random_game(ctx):
    import random
    try:
        records = sheet.get_all_records()

        if not records:
            await ctx.send("‚ùå Kh√¥ng c√≥ d·ªØ li·ªáu.")
            return

        row = random.choice(records)
        embed = discord.Embed(
            title="üé≤ Game ng·∫´u nhi√™n",
            color=discord.Color.purple()
        )
        embed.add_field(
            name=f"üéÆ {row['T√™n Game']}",
            value=f"[T·∫£i t·∫°i ƒë√¢y]({row['Link t·∫£i']})",
            inline=False
        )
        await ctx.send(embed=embed)

    except Exception as e:
        await ctx.send(f"‚ö†Ô∏è L·ªói: {e}")


# ---------------- RUN BOT ----------------
bot.run(DISCORD_TOKEN)

